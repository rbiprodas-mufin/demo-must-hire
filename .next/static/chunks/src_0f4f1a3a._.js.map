{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/muhammadyameen/Desktop/must-company/must-hire-project/front-end/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<HTMLDivElement, React.HTMLAttributes<HTMLDivElement>>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"rounded-lg border bg-card text-card-foreground shadow-sm\", className)} {...props} />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<HTMLDivElement, React.HTMLAttributes<HTMLDivElement>>(\n  ({ className, ...props }, ref) => (\n    <div ref={ref} className={cn(\"flex flex-col space-y-1.5 p-6\", className)} {...props} />\n  ),\n)\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<HTMLParagraphElement, React.HTMLAttributes<HTMLHeadingElement>>(\n  ({ className, ...props }, ref) => (\n    <h3 ref={ref} className={cn(\"text-2xl font-semibold leading-none tracking-tight\", className)} {...props} />\n  ),\n)\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<HTMLParagraphElement, React.HTMLAttributes<HTMLParagraphElement>>(\n  ({ className, ...props }, ref) => (\n    <p ref={ref} className={cn(\"text-sm text-muted-foreground\", className)} {...props} />\n  ),\n)\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<HTMLDivElement, React.HTMLAttributes<HTMLDivElement>>(\n  ({ className, ...props }, ref) => <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />,\n)\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<HTMLDivElement, React.HTMLAttributes<HTMLDivElement>>(\n  ({ className, ...props }, ref) => (\n    <div ref={ref} className={cn(\"flex items-center p-6 pt-0\", className)} {...props} />\n  ),\n)\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,6JAAA,CAAA,aAAgB,MAAuD,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBAC1G,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,4DAA4D;QAAa,GAAG,KAAK;;;;;;;;AAEhH,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,6JAAA,CAAA,aAAgB,OACjC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACtB,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAAa,GAAG,KAAK;;;;;;;;AAGvF,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,6JAAA,CAAA,aAAgB,OAChC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACtB,6LAAC;QAAG,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,sDAAsD;QAAa,GAAG,KAAK;;;;;;;;AAG3G,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,6JAAA,CAAA,aAAgB,OACtC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACtB,6LAAC;QAAE,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAAa,GAAG,KAAK;;;;;;;;AAGrF,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,6JAAA,CAAA,aAAgB,OAClC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBAAU,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;;AAElG,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,6JAAA,CAAA,aAAgB,QACjC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACtB,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAAa,GAAG,KAAK;;;;;;;;AAGpF,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 128, "column": 0}, "map": {"version":3,"sources":["file:///Users/muhammadyameen/Desktop/must-company/must-hire-project/front-end/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nexport type InputProps = React.InputHTMLAttributes<HTMLInputElement>\n\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(({ className, type, ...props }, ref) => {\n  return (\n    <input\n      type={type}\n      className={cn(\n        \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        className,\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAIA,MAAM,sBAAQ,6JAAA,CAAA,aAAgB,MAA+B,QAAgC;QAA/B,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO;IACzF,qBACE,6LAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,gWACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AACA,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 165, "column": 0}, "map": {"version":3,"sources":["file:///Users/muhammadyameen/Desktop/must-company/must-hire-project/front-end/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nexport type TextareaProps = React.TextareaHTMLAttributes<HTMLTextAreaElement>\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, TextareaProps>(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={cn(\n        \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        className,\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAIA,MAAM,yBAAW,6JAAA,CAAA,aAAgB,MAAqC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;IAC5F,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,wSACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AACA,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 201, "column": 0}, "map": {"version":3,"sources":["file:///Users/muhammadyameen/Desktop/must-company/must-hire-project/front-end/src/components/ui/select.tsx"],"sourcesContent":["\"use client\";\n\nimport * as React from \"react\";\nimport * as SelectPrimitive from \"@radix-ui/react-select\";\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst Select = SelectPrimitive.Root;\n\nconst SelectGroup = SelectPrimitive.Group;\n\nconst SelectValue = SelectPrimitive.Value;\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full cursor-pointer items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n));\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName;\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex  cursor-pointer items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n));\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName;\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-pointer items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n));\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName;\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 cursor-pointer max-h-96 bg-white min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 cursor-pointer bg-white data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] cursor-pointer w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n));\nSelectContent.displayName = SelectPrimitive.Content.displayName;\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"py-1.5 cursor-pointer pl-8 pr-2 text-sm font-semibold\",\n      className\n    )}\n    {...props}\n  />\n));\nSelectLabel.displayName = SelectPrimitive.Label.displayName;\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative  bg-white cursor-pointer flex w-full  select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute cursor-pointer left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n));\nSelectItem.displayName = SelectPrimitive.Item.displayName;\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n));\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName;\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 437, "column": 0}, "map": {"version":3,"sources":["file:///Users/muhammadyameen/Desktop/must-company/must-hire-project/front-end/src/components/ui/labels.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\")\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> & VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root ref={ref} className={cn(labelVariants(), className)} {...props} />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EAAE;AAE1B,MAAM,sBAAQ,6JAAA,CAAA,aAAgB,MAG5B,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC,oKAAA,CAAA,OAAmB;QAAC,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAAa,GAAG,KAAK;;;;;;;;AAErF,MAAM,WAAW,GAAG,oKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 479, "column": 0}, "map": {"version":3,"sources":["file:///Users/muhammadyameen/Desktop/must-company/must-hire-project/front-end/src/pages-components/admin/jobs/create.tsx"],"sourcesContent":["\"use client\";\n\nimport type React from \"react\";\nimport { useState } from \"react\";\nimport { useRouter } from \"next/navigation\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\";\nimport { ArrowLeft, Save, X } from \"lucide-react\";\nimport { Label } from \"@/components/ui/labels\";\n\nexport default function CreateJob() {\n  const router = useRouter();\n  const [formData, setFormData] = useState({\n    title: \"\",\n    department: \"\",\n    location: \"\",\n    type: \"Full-time\",\n    salary: \"\",\n    description: \"\",\n    requirements: \"\",\n    benefits: \"\",\n    priority: \"medium\",\n    closingDate: \"\",\n  });\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    console.log(\"Creating job:\", formData);\n    router.push(\"/admin/jobs\");\n  };\n\n  const handleCancel = () => {\n    router.push(\"/admin/jobs\");\n  };\n\n  return (\n    <div className=\"p-6 max-w-full mx-auto space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div className=\"flex items-center space-x-4\">\n          <div>\n            <h1 className=\"text-2xl font-bold text-gray-900\">Create New Job</h1>\n            <p className=\"text-gray-600\">\n              Fill in the details to create a new job posting\n            </p>\n          </div>\n        </div>\n        <Button variant=\"outline\" size=\"sm\" onClick={handleCancel}>\n          <ArrowLeft className=\"h-4 w-4 mr-2\" />\n          Back to Jobs\n        </Button>\n      </div>\n\n      <Card className=\"bg-white shadow-lg\">\n        <CardHeader>\n          <CardTitle>Job Details</CardTitle>\n        </CardHeader>\n        <CardContent>\n          <form onSubmit={handleSubmit} className=\"space-y-6\">\n            {/* Basic Information */}\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              <div>\n                <Label htmlFor=\"title\">Job Title *</Label>\n                <Input\n                  id=\"title\"\n                  value={formData.title}\n                  onChange={(e) =>\n                    setFormData({ ...formData, title: e.target.value })\n                  }\n                  placeholder=\"e.g., Senior Frontend Developer\"\n                  required\n                />\n              </div>\n              <div>\n                <Label htmlFor=\"department\" className=\"mb-[10px]\">\n                  Department *\n                </Label>\n                <Select\n                  value={formData.department}\n                  onValueChange={(value) =>\n                    setFormData({ ...formData, department: value })\n                  }\n                >\n                  <SelectTrigger>\n                    <SelectValue placeholder=\"Select department\" />\n                  </SelectTrigger>\n                  <SelectContent>\n                    <SelectItem value=\"Engineering\">Engineering</SelectItem>\n                    <SelectItem value=\"Product\">Product</SelectItem>\n                    <SelectItem value=\"Design\">Design</SelectItem>\n                    <SelectItem value=\"Marketing\">Marketing</SelectItem>\n                    <SelectItem value=\"Sales\">Sales</SelectItem>\n                    <SelectItem value=\"HR\">Human Resources</SelectItem>\n                    <SelectItem value=\"Finance\">Finance</SelectItem>\n                  </SelectContent>\n                </Select>\n              </div>\n            </div>\n\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              <div>\n                <Label htmlFor=\"location\" className=\"pb-[10px]\">\n                  Location *\n                </Label>\n                <Input\n                  id=\"location\"\n                  value={formData.location}\n                  onChange={(e) =>\n                    setFormData({ ...formData, location: e.target.value })\n                  }\n                  placeholder=\"e.g., San Francisco, CA or Remote\"\n                  required\n                />\n              </div>\n              <div>\n                <Label htmlFor=\"type\">Job Type *</Label>\n                <Select\n                  value={formData.type}\n                  onValueChange={(value) =>\n                    setFormData({ ...formData, type: value })\n                  }\n                >\n                  <SelectTrigger>\n                    <SelectValue />\n                  </SelectTrigger>\n                  <SelectContent>\n                    <SelectItem value=\"Full-time\">Full-time</SelectItem>\n                    <SelectItem value=\"Part-time\">Part-time</SelectItem>\n                    <SelectItem value=\"Contract\">Contract</SelectItem>\n                    <SelectItem value=\"Internship\">Internship</SelectItem>\n                  </SelectContent>\n                </Select>\n              </div>\n            </div>\n\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              <div>\n                <Label htmlFor=\"salary\">Salary Range *</Label>\n                <Input\n                  id=\"salary\"\n                  value={formData.salary}\n                  onChange={(e) =>\n                    setFormData({ ...formData, salary: e.target.value })\n                  }\n                  placeholder=\"e.g., $80k - $120k\"\n                  required\n                />\n              </div>\n              <div>\n                <Label htmlFor=\"priority\">Priority</Label>\n                <Select\n                  value={formData.priority}\n                  onValueChange={(value) =>\n                    setFormData({ ...formData, priority: value })\n                  }\n                >\n                  <SelectTrigger>\n                    <SelectValue />\n                  </SelectTrigger>\n                  <SelectContent>\n                    <SelectItem value=\"high\">High</SelectItem>\n                    <SelectItem value=\"medium\">Medium</SelectItem>\n                    <SelectItem value=\"low\">Low</SelectItem>\n                  </SelectContent>\n                </Select>\n              </div>\n            </div>\n\n            <div>\n              <Label htmlFor=\"closingDate\">Application Closing Date *</Label>\n              <Input\n                id=\"closingDate\"\n                type=\"date\"\n                value={formData.closingDate}\n                onChange={(e) =>\n                  setFormData({ ...formData, closingDate: e.target.value })\n                }\n                required\n              />\n            </div>\n\n            {/* Job Description */}\n            <div>\n              <Label htmlFor=\"description\">Job Description *</Label>\n              <Textarea\n                id=\"description\"\n                value={formData.description}\n                onChange={(e) =>\n                  setFormData({ ...formData, description: e.target.value })\n                }\n                rows={6}\n                placeholder=\"Describe the role, responsibilities, and what the candidate will be working on...\"\n                required\n              />\n            </div>\n\n            <div>\n              <Label htmlFor=\"requirements\">Requirements</Label>\n              <Textarea\n                id=\"requirements\"\n                value={formData.requirements}\n                onChange={(e) =>\n                  setFormData({ ...formData, requirements: e.target.value })\n                }\n                rows={4}\n                placeholder=\"List the required skills, experience, and qualifications (one per line)&#10;e.g.:&#10;5+ years of React experience&#10;Bachelor's degree in Computer Science&#10;Strong communication skills\"\n              />\n            </div>\n\n            <div>\n              <Label htmlFor=\"benefits\">Benefits & Perks</Label>\n              <Textarea\n                id=\"benefits\"\n                value={formData.benefits}\n                onChange={(e) =>\n                  setFormData({ ...formData, benefits: e.target.value })\n                }\n                rows={4}\n                placeholder=\"List the benefits and perks offered (one per line)&#10;e.g.:&#10;Health insurance&#10;401k matching&#10;Remote work options&#10;Professional development budget\"\n              />\n            </div>\n\n            <div className=\"flex justify-end space-x-4 pt-6 border-t\">\n              <Button type=\"button\" variant=\"outline\" onClick={handleCancel}>\n                <X className=\"h-4 w-4 mr-2\" />\n                Cancel\n              </Button>\n              <Button type=\"submit\">\n                <Save className=\"h-4 w-4 mr-2\" />\n                Create Job\n              </Button>\n            </div>\n          </form>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}